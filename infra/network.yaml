AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC with public and private subnets for Turnstile project'

Parameters:
  EnvironmentName:
    Description: Environment name that will be prefixed to resource names
    Type: String
    Default: turnstile

Resources:
  # VPC
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/24
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-vpc
        - Key: dmmx:owner
          Value: bdh61@me.com
        - Key: dmmx:project
          Value: turnstile
        - Key: dmmx:create-date
          Value: '2025-03-30'
        - Key: dmmx:tr:owner
          Value: dan.mohrland@thomsonreuters.com

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-igw
        - Key: dmmx:owner
          Value: bdh61@me.com
        - Key: dmmx:project
          Value: turnstile
        - Key: dmmx:create-date
          Value: '2025-03-30'
        - Key: dmmx:tr:owner
          Value: dan.mohrland@thomsonreuters.com

  # Attach Internet Gateway to VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  # Public Subnet 1
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.0/26
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-subnet-1
        - Key: dmmx:owner
          Value: bdh61@me.com
        - Key: dmmx:project
          Value: turnstile
        - Key: dmmx:create-date
          Value: '2025-03-30'
        - Key: dmmx:tr:owner
          Value: dan.mohrland@thomsonreuters.com

  # Public Subnet 2
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.64/26
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-subnet-2
        - Key: dmmx:owner
          Value: bdh61@me.com
        - Key: dmmx:project
          Value: turnstile
        - Key: dmmx:create-date
          Value: '2025-03-30'
        - Key: dmmx:tr:owner
          Value: dan.mohrland@thomsonreuters.com

  # Private Subnet 1
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.128/26
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-subnet-1
        - Key: dmmx:owner
          Value: bdh61@me.com
        - Key: dmmx:project
          Value: turnstile
        - Key: dmmx:create-date
          Value: '2025-03-30'
        - Key: dmmx:tr:owner
          Value: dan.mohrland@thomsonreuters.com

  # Private Subnet 2
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.0.192/26
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-subnet-2
        - Key: dmmx:owner
          Value: bdh61@me.com
        - Key: dmmx:project
          Value: turnstile
        - Key: dmmx:create-date
          Value: '2025-03-30'
        - Key: dmmx:tr:owner
          Value: dan.mohrland@thomsonreuters.com

  # Elastic IP for NAT Gateway 1
  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-nat-eip
        - Key: dmmx:owner
          Value: bdh61@me.com
        - Key: dmmx:project
          Value: turnstile
        - Key: dmmx:create-date
          Value: '2025-03-30'
        - Key: dmmx:tr:owner
          Value: dan.mohrland@thomsonreuters.com

  # Elastic IP for NAT Gateway 2
  NatGatewayEIP2:
    Type: AWS::EC2::EIP
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-nat-eip-2
        - Key: dmmx:owner
          Value: bdh61@me.com
        - Key: dmmx:project
          Value: turnstile
        - Key: dmmx:create-date
          Value: '2025-03-30'
        - Key: dmmx:tr:owner
          Value: dan.mohrland@thomsonreuters.com

  # NAT Gateway 1
  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-nat
        - Key: dmmx:owner
          Value: bdh61@me.com
        - Key: dmmx:project
          Value: turnstile
        - Key: dmmx:create-date
          Value: '2025-03-30'
        - Key: dmmx:tr:owner
          Value: dan.mohrland@thomsonreuters.com

  # Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-rt
        - Key: dmmx:owner
          Value: bdh61@me.com
        - Key: dmmx:project
          Value: turnstile
        - Key: dmmx:create-date
          Value: '2025-03-30'
        - Key: dmmx:tr:owner
          Value: dan.mohrland@thomsonreuters.com

  # Default route for public subnet
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  # NAT Gateway 2
  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP2.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-nat-2
        - Key: dmmx:owner
          Value: bdh61@me.com
        - Key: dmmx:project
          Value: turnstile
        - Key: dmmx:create-date
          Value: '2025-03-30'
        - Key: dmmx:tr:owner
          Value: dan.mohrland@thomsonreuters.com

  # Associate public subnet 1 with public route table
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  # Associate public subnet 2 with public route table
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  # Private Route Table 1
  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-rt
        - Key: dmmx:owner
          Value: bdh61@me.com
        - Key: dmmx:project
          Value: turnstile
        - Key: dmmx:create-date
          Value: '2025-03-30'
        - Key: dmmx:tr:owner
          Value: dan.mohrland@thomsonreuters.com

  # Private Route Table 2
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-rt-2
        - Key: dmmx:owner
          Value: bdh61@me.com
        - Key: dmmx:project
          Value: turnstile
        - Key: dmmx:create-date
          Value: '2025-03-30'
        - Key: dmmx:tr:owner
          Value: dan.mohrland@thomsonreuters.com

  # Default route for private subnet 1
  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  # Default route for private subnet 2
  PrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2

  # Associate private subnet 1 with private route table 1
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  # Public Security Group
  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for public subnet
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-public-sg
        - Key: dmmx:owner
          Value: bdh61@me.com
        - Key: dmmx:project
          Value: turnstile
        - Key: dmmx:create-date
          Value: '2025-03-30'
        - Key: dmmx:tr:owner
          Value: dan.mohrland@thomsonreuters.com

  # Private Security Group
  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for private subnet
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref PublicSecurityGroup
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref PublicSecurityGroup
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Ref PublicSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-private-sg
        - Key: dmmx:owner
          Value: bdh61@me.com
        - Key: dmmx:project
          Value: turnstile
        - Key: dmmx:create-date
          Value: '2025-03-30'
        - Key: dmmx:tr:owner
          Value: dan.mohrland@thomsonreuters.com

  # Associate private subnet 2 with private route table 2
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

Outputs:
  VpcId:
    Description: VPC ID
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvironmentName}-VpcId

  PublicSubnet1Id:
    Description: Public Subnet 1 ID
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PublicSubnet1Id

  PublicSubnet2Id:
    Description: Public Subnet 2 ID
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PublicSubnet2Id

  PrivateSubnet1Id:
    Description: Private Subnet 1 ID
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PrivateSubnet1Id

  PrivateSubnet2Id:
    Description: Private Subnet 2 ID
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PrivateSubnet2Id

  PublicSecurityGroupId:
    Description: Public Security Group ID
    Value: !Ref PublicSecurityGroup
    Export:
      Name: !Sub ${EnvironmentName}-PublicSecurityGroupId

  PrivateSecurityGroupId:
    Description: Private Security Group ID
    Value: !Ref PrivateSecurityGroup
    Export:
      Name: !Sub ${EnvironmentName}-PrivateSecurityGroupId
